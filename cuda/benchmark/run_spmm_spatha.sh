

#! /bin/bash

mkdir -p /projects/venom/result
log_file=/projects/venom/result/spmm_bert_spatha.csv

echo "benchmark.gemm.nm"

echo "algo,arch,m,k,n,meta_block_sz,block_sz,nn_row,mm_col,density,bm,bn,bk,wm,wn,wk,mm,mn,mk,nstage,spmm_time,gemm_time,speedup,error" > $log_file

shapes="
768,768,2048 \
3072,768,2048 \
768,3072,2048 \
1024,1024,2048 \
4096,1024,2048 \
1024,4096,2048 \
768,768,4096 \
3072,768,4096 \
768,3072,4096 \
1024,1024,4096 \
4096,1024,4096 \
1024,4096,4096 \
768,768,8192 \
3072,768,8192 \
768,3072,8192 \
1024,1024,8192 \
4096,1024,8192 \
1024,4096,8192"

#shapes="
#768,768,4096 \
#3072,768,4096 \
#768,3072,4096 \
#1024,1024,4096 \
#4096,1024,4096 \
#1024,4096,4096 \
#768,768,8192 \
#3072,768,8192 \
#768,3072,8192 \
#1024,1024,8192 \
#4096,1024,8192 \
#1024,4096,8192"

mkdir -p build && cd build
make clean
cmake .. -DCMAKE_BUILD_TYPE=Debug -DCUDA_ARCHS="86" -DBASELINE=OFF -DIDEAL_KERNEL=OFF -DOUT_32B=OFF && make -j 16

for shape in $shapes; do
    IFS=","; set -- $shape
    m=$1; k=$2; n=$3

    ./src/benchmark_spmm --sparsity-type csr --spmm cuSparseLt --gemm cuBlas --precision half --m $m --k $k --n $n --d 0.5 --check >> $log_file
done;

cfgs_min1="
64,32,32,64,32,32,16,8,32,2 \
64,32,32,64,32,32,16,8,32,3 \
64,32,32,64,32,32,16,8,32,4 \
64,64,32,64,32,32,16,8,32,2 \
64,64,32,64,32,32,16,8,32,3 \
64,64,32,64,32,32,16,8,32,4 \
64,64,32,32,32,32,16,8,32,2, \
64,64,32,32,32,32,16,8,32,3, \
64,64,32,32,32,32,16,8,32,4, \
128,32,32,128,32,32,16,8,32,2 \
128,64,32,64,32,32,16,8,32,2 \
128,64,32,64,32,32,16,8,32,3 \
128,64,32,64,32,32,16,8,32,4 \
128,64,32,64,32,32,16,8,32,5 \
128,64,32,64,32,32,16,8,32,6 \
128,64,32,128,32,32,16,8,32,2 \
128,64,32,128,32,32,16,8,32,3 \
128,64,32,128,32,32,16,8,32,4 \
128,128,32,64,32,32,16,8,32,2 \
128,128,32,64,32,32,16,8,32,4 \
128,128,32,64,64,32,16,8,32,2 \
128,128,32,64,64,32,16,8,32,4 \
128,128,32,128,64,32,16,8,32,2 \
128,128,32,128,128,32,16,8,32,2 \
128,128,32,128,128,32,16,8,32,4 \
128,64,32,32,64,32,16,8,32,2, \
128,64,32,32,64,32,16,8,32,3, \
128,64,32,32,64,32,16,8,32,4, \
128,64,32,64,16,32,16,8,32,2, \
128,64,32,64,16,32,16,8,32,3, \
128,64,32,64,16,32,16,8,32,4, \
128,32,32,32,32,32,16,8,32,2, \
128,32,32,32,32,32,16,8,32,3, \
128,64,32,32,32,32,16,8,32,2, \
128,64,32,32,32,32,16,8,32,3, \
128,64,32,32,32,32,16,8,32,4, \
128,128,32,32,64,32,16,8,32,2, \
128,128,32,32,64,32,16,8,32,4, \
128,64,32,128,64,32,16,8,32,2, \
128,64,32,128,64,32,16,8,32,3, \
128,64,32,128,64,32,16,8,32,4, \
128,64,32,64,64,32,16,8,32,2, \
128,64,32,64,64,32,16,8,32,3, \
128,64,32,64,64,32,16,8,32,4, \
128,128,32,64,128,32,16,8,32,2, \
128,128,32,64,128,32,16,8,32,3, \
128,128,32,64,128,32,16,8,32,4, \
64,128,32,64,64,32,16,8,32,2, \
64,128,32,64,64,32,16,8,32,3, \
64,128,32,64,64,32,16,8,32,4, \
64,128,32,32,64,32,16,8,32,2, \
64,128,32,32,64,32,16,8,32,3, \
64,128,32,32,64,32,16,8,32,4, \
64,128,32,32,128,32,16,8,32,2, \
64,128,32,32,128,32,16,8,32,3, \
64,128,32,32,128,32,16,8,32,4, \
64,128,32,64,128,32,16,8,32,2, \
64,128,32,64,128,32,16,8,32,3, \
64,128,32,64,128,32,16,8,32,4"

#cfgs_min1="
#128,64,32,32,64,32,16,8,32,2 \
#128,64,32,32,64,32,16,8,32,3 \
#128,64,32,32,64,32,16,8,32,4 \
#64,64,32,32,64,32,16,8,32,2 \
#64,64,32,32,64,32,16,8,32,3 \
#64,64,32,32,64,32,16,8,32,4"


make clean
cmake .. -DCMAKE_BUILD_TYPE=Debug -DCUDA_ARCHS="86" -DBASELINE=ON -DOUT_32B=ON -DIDEAL_KERNEL=OFF && make -j 16

IFS=" ";
for mm_row in 4; do
    for shape in $shapes; do
        IFS=","; set -- $shape
        m=$1; k=$2; n=$3

        IFS=" ";
        for cfg in $cfgs_min1; do
            IFS=","; set -- $cfg

            bm=$1; bn=$2; bk=$3; wm=$4; wn=$5; wk=$6; mm=$7; mn=$8; mk=$9; nstage=${10};

            ./src/benchmark_spmm --sparsity-type n-to-m --spmm spatha --gemm cuBlas --precision half --meta-block-size 32 --block-size 4 --nn_row 2 --mm_row $mm_row --m $m --k $k --n $n --d 0.5 --bm $bm --bn $bn --bk $bk --wm $wm --wn $wn --wk $wk --mm $mm --mn $mn --mk $mk --nstage $nstage --check >> $log_file
        done;
        IFS=" ";
    done;
    IFS=" ";
done;

cfgs_min1="
64,64,32,32,64,32,16,8,32,2 \
64,64,32,32,64,32,16,8,32,3 \
64,64,32,32,64,32,16,8,32,4 \
64,64,32,64,64,32,16,8,32,2 \
64,64,32,64,64,32,16,8,32,3 \
64,64,32,64,64,32,16,8,32,4 \
128,64,32,32,64,32,16,8,32,2 \
128,64,32,32,64,32,16,8,32,3 \
128,64,32,32,64,32,16,8,32,4 \
128,64,32,128,64,32,16,8,32,2 \
128,64,32,128,64,32,16,8,32,3 \
128,64,32,128,64,32,16,8,32,4 \
128,64,32,64,64,32,16,8,32,2 \
128,64,32,64,64,32,16,8,32,3 \
128,64,32,64,64,32,16,8,32,4 \
32,64,32,32,64,32,16,8,32,2 \
32,64,32,32,64,32,16,8,32,3 \
32,64,32,32,64,32,16,8,32,4"

#cfgs_min1="
#128,64,32,32,64,32,16,8,32,2 \
#128,64,32,32,64,32,16,8,32,3 \
#128,64,32,32,64,32,16,8,32,4 \
#64,64,32,32,64,32,16,8,32,2 \
#64,64,32,32,64,32,16,8,32,3 \
#64,64,32,32,64,32,16,8,32,4"

make clean
cmake .. -DCMAKE_BUILD_TYPE=Debug -DCUDA_ARCHS="86" -DBASELINE=ON && make -j 16

IFS=" ";
for mm_row in 4; do
    for shape in $shapes; do
        IFS=","; set -- $shape
        m=$1; k=$2; n=$3

        IFS=" ";
        for cfg in $cfgs_min1; do
            IFS=","; set -- $cfg

            bm=$1; bn=$2; bk=$3; wm=$4; wn=$5; wk=$6; mm=$7; mn=$8; mk=$9; nstage=${10};

            ./src/benchmark_spmm --sparsity-type n-to-m --spmm spatha --gemm cuBlas --precision half --meta-block-size 32 --block-size 4 --nn_row 2 --mm_row $mm_row --m $m --k $k --n $n --d 0.5 --bm $bm --bn $bn --bk $bk --wm $wm --wn $wn --wk $wk --mm $mm --mn $mn --mk $mk --nstage $nstage --check >> $log_file
        done;
        IFS=" ";
    done;
    IFS=" ";
done;

make clean
cmake .. -DCMAKE_BUILD_TYPE=Debug -DCUDA_ARCHS="86" -DBASELINE=OFF -DIDEAL_KERNEL=OFF -DOUT_32B=OFF && make -j 16

IFS=" ";
for mm_row in 7 8 10 20 40 100; do
    for shape in $shapes; do
        IFS=","; set -- $shape
        m=$1; k=$2; n=$3

        IFS=" ";
        for cfg in $cfgs_min1; do
            IFS=","; set -- $cfg

            bm=$1; bn=$2; bk=$3; wm=$4; wn=$5; wk=$6; mm=$7; mn=$8; mk=$9; nstage=${10};

            ./src/benchmark_spmm --sparsity-type n-to-m --spmm spatha --gemm cuBlas --precision half --meta-block-size 32 --block-size 4 --nn_row 2 --mm_row $mm_row --m $m --k $k --n $n --d 0.5 --bm $bm --bn $bn --bk $bk --wm $wm --wn $wn --wk $wk --mm $mm --mn $mn --mk $mk --nstage $nstage --check >> $log_file
        done;
        IFS=" ";
    done;
    IFS=" ";
done;

echo "running CLASP"
IFS=" ";
for shape in $shapes; do
    IFS=","; set -- $shape
    m=$1; k=$2; n=$3
    echo $m $k $n

    IFS=" ";
    for d in 0.5 0.29 0.25 0.2 0.1 0.05 0.02; do
        for v in 2 4 8; do
            #echo $d $v
            ./src/benchmark_spmm --sparsity-type cvs --spmm CLASP --gemm cuBlas --precision half --acc_t fp16 --block-size $v --m $m --k $k --n $n --d $d >> $log_file
        done;
    done;
    IFS=" ";
done;

echo "running Sputnik"
IFS=" ";
for shape in $shapes; do
    IFS=","; set -- $shape
    m=$1; k=$2; n=$3

    IFS=" ";
    for d in 0.5 0.29 0.25 0.2 0.1 0.05 0.02; do
        ./src/benchmark_spmm --sparsity-type csr --spmm sputnik --gemm cuBlas --precision half --acc_t fp16 --m $m --k $k --n $n --d $d >> $log_file
    done;
    IFS=" ";
done;


#set n:m values depending to the sparsity level selected (2:4,2:7,2:8,2:10,2:20,2:40,2:100). This is just used in the plot script
sed -i "s/0,0,0.5,0,0,0,0,0,0,0,0,0,0/2,4,0.5,0,0,0,0,0,0,0,0,0,0/" $log_file
sed -i "s/0,0,0.29,0,0,0,0,0,0,0,0,0,0/2,7,0.29,0,0,0,0,0,0,0,0,0,0/" $log_file
sed -i "s/0,0,0.25,0,0,0,0,0,0,0,0,0,0/2,8,0.25,0,0,0,0,0,0,0,0,0,0/" $log_file
sed -i "s/0,0,0.2,0,0,0,0,0,0,0,0,0,0/2,10,0.2,0,0,0,0,0,0,0,0,0,0/" $log_file
sed -i "s/0,0,0.1,0,0,0,0,0,0,0,0,0,0/2,20,0.1,0,0,0,0,0,0,0,0,0,0/" $log_file
sed -i "s/0,0,0.05,0,0,0,0,0,0,0,0,0,0/2,40,0.05,0,0,0,0,0,0,0,0,0,0/" $log_file
sed -i "s/0,0,0.02,0,0,0,0,0,0,0,0,0,0/2,100,0.02,0,0,0,0,0,0,0,0,0,0/" $log_file

#cfgs_min1="
#64,32,32,64,32,32,16,8,32,2 \
#64,32,32,64,32,32,16,8,32,3 \
#64,32,32,64,32,32,16,8,32,4 \
#64,64,32,64,32,32,16,8,32,2 \
#64,64,32,64,32,32,16,8,32,3 \
#64,64,32,64,32,32,16,8,32,4 \
#64,64,32,32,32,32,16,8,32,2, \
#64,64,32,32,32,32,16,8,32,3, \
#64,64,32,32,32,32,16,8,32,4, \
#128,32,32,128,32,32,16,8,32,2 \
#128,64,32,64,32,32,16,8,32,2 \
#128,64,32,64,32,32,16,8,32,3 \
#128,64,32,64,32,32,16,8,32,4 \
#128,64,32,64,32,32,16,8,32,5 \
#128,64,32,64,32,32,16,8,32,6 \
#128,64,32,128,32,32,16,8,32,2 \
#128,64,32,128,32,32,16,8,32,3 \
#128,64,32,128,32,32,16,8,32,4 \
#128,128,32,64,32,32,16,8,32,2 \
#128,128,32,64,32,32,16,8,32,4 \
#128,128,32,64,64,32,16,8,32,2 \
#128,128,32,64,64,32,16,8,32,4 \
#128,128,32,128,64,32,16,8,32,2 \
#128,128,32,128,128,32,16,8,32,2 \
#128,128,32,128,128,32,16,8,32,4 \
#128,64,32,32,64,32,16,8,32,2, \
#128,64,32,32,64,32,16,8,32,3, \
#128,64,32,32,64,32,16,8,32,4, \
#128,64,32,64,16,32,16,8,32,2, \
#128,64,32,64,16,32,16,8,32,3, \
#128,64,32,64,16,32,16,8,32,4, \
#128,32,32,32,32,32,16,8,32,2, \
#128,32,32,32,32,32,16,8,32,3, \
#128,64,32,32,32,32,16,8,32,2, \
#128,64,32,32,32,32,16,8,32,3, \
#128,64,32,32,32,32,16,8,32,4, \
#128,128,32,32,64,32,16,8,32,2, \
#128,128,32,32,64,32,16,8,32,4, \
#128,64,32,128,64,32,16,8,32,2, \
#128,64,32,128,64,32,16,8,32,3, \
#128,64,32,128,64,32,16,8,32,4, \
#128,64,32,64,64,32,16,8,32,2, \
#128,64,32,64,64,32,16,8,32,3, \
#128,64,32,64,64,32,16,8,32,4, \
#128,128,32,64,128,32,16,8,32,2, \
#128,128,32,64,128,32,16,8,32,3, \
#128,128,32,64,128,32,16,8,32,4, \
#64,128,32,64,64,32,16,8,32,2, \
#64,128,32,64,64,32,16,8,32,3, \
#64,128,32,64,64,32,16,8,32,4, \
#64,128,32,32,64,32,16,8,32,2, \
#64,128,32,32,64,32,16,8,32,3, \
#64,128,32,32,64,32,16,8,32,4, \
#64,128,32,32,128,32,16,8,32,2, \
#64,128,32,32,128,32,16,8,32,3, \
#64,128,32,32,128,32,16,8,32,4, \
#64,128,32,64,128,32,16,8,32,2, \
#64,128,32,64,128,32,16,8,32,3, \
#64,128,32,64,128,32,16,8,32,4"